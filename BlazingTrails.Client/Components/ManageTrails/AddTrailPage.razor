@page "/add-trail"
@inject IMediator mediator

<PageTitle>Add Trail - Blazing Trails</PageTitle>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Add Trail</li>
    </ol>
</nav>
<h3 class="mt-5 mb-4">Add a trail</h3>

@if (isLoading)
{
    <div class="spinner-border"></div>
}
else
{
    @if (isSuccessful)
    {

        <div class="alert alert-success" role="alert">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
            </svg>
            Your trail has been submitted successfully!
        </div>
    }
    else if (errorMessage is not null)
    {
        <div class="alert alert-danger" role="alert">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z" />
            </svg>
            @errorMessage
        </div>
    }
}


<EditForm EditContext="editContext" OnValidSubmit="SubmitForm">
    <FormSection Title="Basic Details" HelpText="This information is used to identify the trail and can be searched to help hikers find it.">
        <FormFieldSet width="col-6">
            <label for="trailName" class="font-weight-bold text-secondary">Name</label>
            <InputText @bind-Value="trail.Name" class="form-control" id="trailName" />
            <ValidationMessage For="@(() => trail.Name)" />
        </FormFieldSet>

        <FormFieldSet width="col">
            <label for="trailDescription" class="font-weight-bold text-secondary">Description</label>
            <InputTextArea @bind-Value="trail.Description" rows="6" class="form-control" id="trailDescription" />
            <ValidationMessage For="@(() => trail.Description)" />
        </FormFieldSet>

        <FormFieldSet width="col-6">
            <label for="trailLocation" class="font-weight-bold text-secondary">Location</label>
            <InputText @bind-Value="trail.Location" class="form-control" id="trailLocation" />
            <ValidationMessage For="@(() => trail.Location)" />
        </FormFieldSet>

        <FormFieldSet width="col-3">
            <label for="trailLength" class="font-weight-bold text-secondary">Length (km)</label>
            <InputNumber @bind-Value="trail.Length" class="form-control" id="trailLength" />
            <ValidationMessage For="@(() => trail.Length)" />
        </FormFieldSet>

        <FormFieldSet width="col-5">
            <label for="trailTime" class="font-weight-bold text-secondary">Time</label>
            <InputTime @bind-Value="trail.TimeInMinutes" id="trailTime" />
            <ValidationMessage For="@(() => trail.TimeInMinutes)" />
        </FormFieldSet>

        <FormFieldSet width="col-5">
            <label for="trailImage" class="font-weight-bold text-secondary">Image</label>
            <InputFile OnChange="LoadTrailImage" class="form-control-file form-control" id="trailImage" accept=".png,.jpg,.jpeg" />
        </FormFieldSet>
    </FormSection>

    <FormSection Title="Route Instructions" HelpText="Route instructions are a guide for the trail. This helps hikers new to the trail stay on track.">
        @{int i = 1;}
        @foreach (var route in trail.Routes)
        {
            route.Stage = i;
            <div class="row">
                <div class="col-2">
                    <div class="form-group">
                        <label class="font-weight-bold text-secondary">Stage</label>
                        <p>@(i++)</p>
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label for="routeInstructionDescription" class="font-weight-bold text-secondary">Description</label>
                        <InputText @bind-Value="route.Description" class="form-control" id="routeInstructionDescription" />
                        <ValidationMessage For="@(() => route.Description)" />
                    </div>
                </div>
                <div class="col-1 d-flex mt-3">
                    <button @onclick="@(() => trail.Routes.Remove(route))" class="btn btn-link" type="button">
                        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-x-circle-fill text-danger" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z" />
                        </svg>
                    </button>
                </div>
            </div>
        }
        <ValidationMessage For="@(() => trail.Routes)" />
        <div class="row">
            <div class="col">
                <button class="btn btn-outline-primary" type="button" @onclick="@(() => trail.Routes.Add(new RouteInstruction()))">
                    Add Instruction
                </button>
            </div>
        </div>
    </FormSection>

    <div class="mt-4 mb-5">
        <div class="row">
            <div class="offset-4 col-8 text-right">
                <button class="btn btn-outline-secondary"
                        type="button"
                        @onclick="@ResetForm">
                    Reset
                </button>
                <button class="btn btn-primary"
                        type="submit">
                    Submit
                </button>
            </div>
        </div>
    </div>
    <FluentValidationValidator />
</EditForm>

@code {
    private TrailDto trail = new();
    private EditContext editContext = default!;
    private IBrowserFile? trailImg;

    private string? errorMessage;
    private bool isSuccessful;
    private bool isLoading;

    protected override void OnInitialized()
    {
        editContext = new EditContext(trail);
        editContext.SetFieldCssClassProvider(new BootstrapCssClassProvider());
    }

    private async Task SubmitForm()
    {
        isLoading = true;
        editContext = new EditContext(trail);

        var response = await mediator.Send(new AddTrailRequest(trail));
        if (response.trailId is -1)
        {
            errorMessage = response.errorMessage;
            isLoading = false;
            isSuccessful = false;
            return;
        }
        if (trailImg is null)
        {
            ResetForm();
            isLoading = false;
            isSuccessful = true;
            return;
        }
        await SendImage(response.trailId);
    }

    private async Task SendImage(int trailId)
    {
        var response = await mediator.Send(new UploadTrailImageRequest(trailId, trailImg));
        if (String.IsNullOrEmpty(response.imageName))
        {
            isLoading = false;
            errorMessage = response.errorMessage;
            return;
        }
        isSuccessful = true;
        ResetForm();
    }

    private void LoadTrailImage(InputFileChangeEventArgs args) => trailImg = args.File;

    private void ResetForm()
    {
        trail = new TrailDto();
        editContext = new EditContext(trail);
        editContext.SetFieldCssClassProvider(new FieldCssClassProvider());
        trailImg = null;
    }
}
